#!/bin/bash
# Refer https://github.com/rahul003/hudl/blob/master/README.md for detailed usage instructions
usage() {
  echo "Hudl - A bash utility to execute commands on a huddle of machines
Usage: 
  -h hostsfile 
     default=hosts
  -t tmux mode
  -l log mode
  -v verbose mode
  -c copy source path
  -d copy destination path
  -s script path
  Refer https://github.com/rahul003/hudl/blob/master/README.md for detailed usage instructions"
}

error() {
  echo "Run '"hudl"' to see instructions on how to use this usage of this tool"
}

hudl() {
  tmux_mode=false
  log_mode=false
  log_dir='hudl/tmux_logs/'
  verbose_mode=false
  hosts_file="hosts"
  dest_path=""
  local OPTIND o t h c l v d s
  while getopts "th:c:lvd:s:" o; do
    case "${o}" in
      t)
        tmux_mode=true
        ;;
      h)
        hosts_file=$OPTARG
        ;;
      c)
        copy_path=$OPTARG
        ;;
      d)
        dest_path=$OPTARG
        ;;
      l)
        log_mode=true
        ;;
      v)
        verbose_mode=true
        ;;
      s)
        script_path=$OPTARG
        ;;
      \?)
        error
        return 1
        ;;
    esac
  done
  shift $(($OPTIND - 1))
  command=$@

  # if not running script mode, command needs to be set
  if [ -z "$command" ] && [ -z "$script_path" ]
  then
    usage
    return 0
  fi
  if [ $log_mode == true ] && [ $tmux_mode == false ]
  then
    echo "-l option only used with -t. Ignoring logging request"
  fi

  finalcommand=""
  if [ -n "$copy_path" ] || [ -n "$script_path" ]
  then 
    if [ -n "$script_path" ]
    then
      copy_path=$script_path
      if [ -z "$dest_path" ]
      then
        dest_path='hudl/scripts/'
      fi
      dest_path=${dest_path}/
    fi


    while read -u 10 host; 
    do
      host=${host%% slots*}
      if [ $verbose_mode == true ]
      then
        echo 'Copying' $copy_path 'to '$host':'$dest_path
      fi
      ssh -o "StrictHostKeyChecking no" $host "mkdir -p $dest_path" ;
      scp -o "StrictHostKeyChecking no" -r $copy_path $host:$dest_path ;
      if [ -n "$script_path" ]
      then
        command="bash ${dest_path}$(basename $script_path) ${command}"
      fi
    done 10<$hosts_file
    if [ -n "$script_path" ]
    then
      unset copy_path
    fi
  fi

  if [ -n "$script_path" ] || [ -z "$copy_path" ]
  then
    if [ $tmux_mode == true ]
    then
      if [ $log_mode == true ]
      then
        LOG_FILE=$log_dir`date +%Y%m%d_%H%M%SZ`
        LOG_FILE+='.log'
        finalcommand+="tmux new-session -d \"$command |& tee -a $LOG_FILE\""
      else
        finalcommand+="tmux new-session -d \"$command\""
      fi
    else
      finalcommand+=$command
    fi
    while read -u 10 host; 
    do
      host=${host%% slots*}
      if [ $verbose_mode == true ]
      then
        echo "Running on ${host}:${finalcommand}"
      fi
      if [ $tmux_mode == true ] && [ $log_mode == true ]
      then
        ssh -o "StrictHostKeyChecking no" $host "mkdir -p $log_dir" ;
      fi
      ssh -o "StrictHostKeyChecking no" $host $finalcommand ;
    done 10<$hosts_file;
  fi
}

hudl $@